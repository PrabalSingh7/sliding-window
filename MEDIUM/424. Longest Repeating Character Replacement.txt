424. Longest Repeating Character Replacement
Medium
7.7K
322
Companies
You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.

Return the length of the longest substring containing the same letter you can get after performing the above operations.

 

Example 1:

Input: s = "ABAB", k = 2
Output: 4
Explanation: Replace the two 'A's with two 'B's or vice versa.
Example 2:

Input: s = "AABABBA", k = 1
Output: 4
Explanation: Replace the one 'A' in the middle with 'B' and form "AABBBBA".
The substring "BBBB" has the longest repeating letters, which is 4.
 

Constraints:

1 <= s.length <= 105
s consists of only uppercase English letters.
0 <= k <= s.length
Accepted
428.9K
Submissions
825.9K
Acceptance Rate
51.9%




class Solution {
public:
    int characterReplacement(string s, int k) {
        int n = s.size();
        int i = 0, j = 0, maxi = 0;
        
        unordered_map<char,int> um;
        int ans = -1;

        while(j < n)    {
            um[s[j]]++;
            maxi = max(maxi, um[s[j]]);
            //checking if current window exceeds the count of k changable elements 
            if((j-i+1) - maxi > k){
                um[s[i]]--;
                i++;
            }
            ans = max(ans, (j-i+1));
            j++;   
        }

        return ans;
    }
};