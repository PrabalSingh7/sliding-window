1493. Longest Subarray of 1's After Deleting One Element
Medium
1.4K
30
Companies
Given a binary array nums, you should delete one element from it.

Return the size of the longest non-empty subarray containing only 1's in the resulting array. Return 0 if there is no such subarray.

 

Example 1:

Input: nums = [1,1,0,1]
Output: 3
Explanation: After deleting the number in position 2, [1,1,1] contains 3 numbers with value of 1's.
Example 2:

Input: nums = [0,1,1,1,0,1,1,0,1]
Output: 5
Explanation: After deleting the number in position 4, [0,1,1,1,1,1,0,1] longest subarray with value of 1's is [1,1,1,1,1].
Example 3:

Input: nums = [1,1,1]
Output: 2
Explanation: You must delete one element.
 

Constraints:

1 <= nums.length <= 105
nums[i] is either 0 or 1.
Accepted
59.2K
Submissions
97.9K
Acceptance Rate
60.5%


class Solution {
public:
    int longestSubarray(vector<int>& nums) {
        int  i=0, j=0, res=0, cnt=0, n=nums.size();

        for(int j=0; j<n; j++)      {
            if(nums[j]==1)  {
                if(j!=n-1&&cnt==0)
                    res = max(res,j-i+1);
                else 
                    res = max(res,j-i);
            }
            else {
                cnt++;
                while(cnt>1 && i<=j)    {
                    if(nums[i]==0)  
                        cnt--;
                    i++;
                }
            }
        }

        return res;
    }
};