3. Longest Substring Without Repeating Characters
Medium
32.9K
1.4K
Companies
Given a string s, find the length of the longest 
substring
 without repeating characters.

 

Example 1:

Input: s = "abcabcbb"
Output: 3
Explanation: The answer is "abc", with the length of 3.
Example 2:

Input: s = "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.
Example 3:

Input: s = "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3.
Notice that the answer must be a substring, "pwke" is a subsequence and not a substring.
 

Constraints:

0 <= s.length <= 5 * 104
s consists of English letters, digits, symbols and spaces.
Accepted
4.4M
Submissions
12.9M
Acceptance Rate
33.8%




class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<int,int> mp;
        int n = s.size();
        if(n==1)    return 1;
        int res=0,l=0,h=0;

        while(l<n&&h<n) {
            char curr = s[h];
            
            if(mp[curr]!=0)    {
                res = max(res,h-l);
                char low = s[l];
                mp[low]--;
                l++;
            }
            else {
                mp[curr]++;
                h++;
                if(h==n)    {
                    res = max(res,h-l);
                    break;
                }
            }
        }

        return res;
    }
};