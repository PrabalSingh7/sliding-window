1004. Max Consecutive Ones III
Medium
6.1K
70
Companies
Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

 

Example 1:

Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.
Example 2:

Input: nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3
Output: 10
Explanation: [0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.
 

Constraints:

1 <= nums.length <= 105
nums[i] is either 0 or 1.
0 <= k <= nums.length
Accepted
286.8K
Submissions
453.7K
Acceptance Rate
63.2%



class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int n = nums.size();
        int zc = 0;
        int l=0, h=0;
        int res = 0;

        while(l<n&&h<n) {
            if(nums[h]==0)
                zc++;
            while(zc>k) {
                if(nums[l]==0)
                    zc--;
                l++;
            }
            res= max(res,h+1-l);
            h++;
        }

        return res;
    }
};